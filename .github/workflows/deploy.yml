name: Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  all:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short=8 HEAD)" >> $GITHUB_OUTPUT
    - name: Set up gh-pages branch
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        rm -rf public
        git config --global user.name "arloor"
        git config --global user.email "admin@arloor.com"
        if ! gh repo clone arloor/arloor.github.io public -- --depth=1 --single-branch -b gh-pages;
        then
          echo first time, create gh-pages branch
          mkdir public
          cd public
          git init
          git checkout --orphan gh-pages
          git remote add origin https://github.com/arloor/arloor.github.io
          cd ..
        fi
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v3
      with:
          hugo-version: 'latest'
          extended: true
    # - name: setup hugo
    #   run: |
    #     hugoVersion="0.135.0"
    #     hugoURL=https://github.com/gohugoio/hugo/releases/download/v${hugoVersion}/hugo_extended_${hugoVersion}_Linux-64bit.tar.gz
    #     sudo apt-get install -y tar curl
    #     mkdir /tmp/hugo
    #     curl -Lf "$hugoURL" -o /tmp/hugo/hugo.tar.gz
    #     tar -zxf /tmp/hugo/hugo.tar.gz -C /tmp/hugo/
    #     install /tmp/hugo/hugo /usr/local/bin/
    - name: hugo build
      run: |
        hugo -d public
    - name: commit and push
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        cd  public
        git config url.https://arloor:${{ github.token }}@github.com/.insteadOf https://github.com/
        git config user.name "arloor"
        git config user.email "admin@arloor.com"
        git add .&&git commit -m "updates from ${{ steps.vars.outputs.sha_short }}" && git push -u origin gh-pages -f || echo "nothing to commit"

    - name: cleanup
      run: |
        rm -rf ~/.ssh
        rm -rf ~/.gitconfig